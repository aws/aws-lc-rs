[package]
name = "aws-lc-sys"
description = "AWS-LC is a general-purpose cryptographic library maintained by the AWS Cryptography team for AWS and their customers. It Ñ–s based on code from the Google BoringSSL project and the OpenSSL project."
version = "0.12.0"
links = "aws_lc_0_12_0"
authors = ["AWS-LC"]
edition.workspace = true
repository.workspace = true
license.workspace = true
rust-version.workspace = true
include = [
    "LICENSE",
    "/aws-lc/**/*.c",
    "/aws-lc/**/*.cc",
    "/aws-lc/**/*.pl",
    "/aws-lc/**/*.h",
    "/aws-lc/**/*.S",
    "/aws-lc/**/*.asm",
    "/aws-lc/**/CMakeLists.txt",
    "/aws-lc/**/*.cmake",
    "/aws-lc/**/*.errordata",
    "!/aws-lc/bindings/**",
    "!/aws-lc/docs/**",
    "!/aws-lc/fuzz/**",
    "!/aws-lc/generated-src/crypto_test_data.cc",
    "!/aws-lc/tests/**",
    "!/aws-lc/third_party/**",
    "!/aws-lc/util/**",
    "/aws-lc/tests/compiler_features_tests/**.c",
    "/aws-lc/third_party/fiat/**/LICENSE",
    "/aws-lc/third_party/fiat/**/*.h",
    "/aws-lc/third_party/s2n-bignum/**/*.S",
    "/aws-lc/third_party/s2n-bignum/**/*.h",
    "/aws-lc/util/fipstools/**/CMakeLists.txt",
    "/aws-lc/util/fipstools/**/*.c",
    "/CMakeLists.txt",
    "/builder/**/*.rs",
    "/Cargo.toml",
    "/generated-include/**",
    "/include/**",
    "/rust_wrapper.c",
    "/src/**/*.rs",
    "/tests/**/*.rs",
]
build = "builder/main.rs"

[features]
asan = []
ssl = []
bindgen = ["dep:bindgen"] # Generate the bindings on the targetted platform as a fallback mechanism.

[build-dependencies]
cmake.workspace = true
dunce.workspace = true
fs_extra.workspace = true

[target.'cfg(any(all(target_os = "macos", target_arch = "x86_64"), all(target_os = "linux", target_arch = "x86"), all(target_os = "linux", target_arch = "x86_64"), all(target_os = "linux", target_arch = "aarch64")))'.build-dependencies]
bindgen = { workspace = true, optional = true }

[target.'cfg(not(any(all(target_os = "macos", target_arch = "x86_64"), all(target_os = "linux", target_arch = "x86"), all(target_os = "linux", target_arch = "x86_64"), all(target_os = "linux", target_arch = "aarch64"))))'.build-dependencies]
bindgen.workspace = true

[dependencies]
libc.workspace = true
paste.workspace = true
regex.workspace = true
lazy_static.workspace = true
clap.workspace = true
hex.workspace = true

[package.metadata.aws-lc-sys]
commit-hash = "aa90e509f2e940916fbe9fdd469a4c90c51824f6"
